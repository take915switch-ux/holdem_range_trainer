<!DOCTYPE html>
<html lang="ja">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>UTGレンジ記憶トレ（6-max・UTG・169ハンド・境界近傍優先｜重複なし v2・コイン＆座標微調整）</title>
<style>
  :root {
    --table-green: #116b3b; --felt: #0c7a43; --seat:#444; --seat-text:#fff; --utg:#e53935;
    --bg:#111; --card-bg:#fff; --card-outline:#ddd; --panel-bg:#1b1b1b; --panel-bd:#2d2d2d;
  }
  html,body{margin:0;padding:0;background:var(--bg);color:#eee;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Hiragino Kaku Gothic ProN","Yu Gothic UI","Yu Gothic","Noto Sans JP","Meiryo",sans-serif}
  body{min-height:100vh;display:flex;flex-direction:column}
  h1{font-size:18px;margin:10px 8px;text-align:center;line-height:1.2}
  .app{width:100%;max-width:1100px;margin:0 auto;padding:6px;display:flex;flex-direction:column;gap:8px;flex:1}
  .row{display:flex;gap:10px;flex-direction:column;} 
  .col{display:flex;flex-direction:column;gap:8px;flex:1}
  /* Poker table */
  .table-wrap{display:flex;justify-content:center}
  .table{
    position:relative;
    width: min(94vw,380px);
    height: calc(min(94vw,380px)*0.6);
    background: radial-gradient(circle at 50% 50%, var(--felt) 0%, var(--table-green) 70%);
    border-radius: 50% / 38%;
    box-shadow: 0 10px 30px rgba(0,0,0,.45) inset, 0 8px 24px rgba(0,0,0,.35);
    overflow:hidden;
  }
  /* Coins */
  .coin{
    position:absolute; width:18px; height:18px; border-radius:50%;
    background: radial-gradient(circle at 30% 30%, #f7e27d 0%, #efd463 35%, #e0b83a 65%, #b8862e 100%);
    border:1px solid #b88a2c;
    box-shadow: 0 1px 0 rgba(255,255,255,.35) inset, 0 2px 4px rgba(0,0,0,.4);
    transform: rotate(-8deg);
    opacity:.95;
    z-index: 2;
  }
  .coin::after{
    content:""; position:absolute; left:3px; top:3px; width:7px; height:3px; border-radius:50%;
    background: rgba(255,255,255,.55);
    filter: blur(0.2px);
  }
  /* moved further inside and away from SB/BB labels */
  .bb-coin1{ top:25%; left:20%; }
  .bb-coin2{ top:28%; left:24%; transform: rotate(12deg); }
  .sb-coin1{ bottom:25%; left:20%; transform: rotate(-3deg); }

  .seat{position:absolute; width:54px;height:24px;background:var(--seat);color:var(--seat-text);
        border-radius:12px;display:flex;align-items:center;justify-content:center;font-size:11px;opacity:.95; z-index:3}
  .seat.utg{background:var(--utg);font-weight:700;opacity:1}
  /* keep fully inside table with safe margins */
  .s1{top:2%; left:50%; transform:translateX(-50%)} /* UTG */
  .s2{top:19%; right:6%} .s3{bottom:19%; right:6%}
  .s4{bottom:2%; left:50%; transform:translateX(-50%)} /* BTN */
  .s5{bottom:19%; left:6%} .s6{top:19%; left:6%}
  /* Panels */
  .panel{background:var(--panel-bg);border:1px solid var(--panel-bd);border-radius:12px;padding:10px;display:flex;flex-direction:column;gap:8px}
  .q{font-size:16px;text-align:center;margin:0}
  .cards{display:flex;justify-content:center;gap:8px;flex-wrap:wrap}
  /* Card */
  .card{width:78px;height:112px;background:var(--card-bg);border-radius:10px;border:1px solid var(--card-outline);
        position:relative;box-shadow:0 4px 12px rgba(0,0,0,.35)}
  .rank{position:absolute;left:6px;top:4px;font-weight:700;font-size:20px}
  .rank.bottom{left:auto;right:6px;bottom:4px;top:auto;transform:rotate(180deg)}
  .suit{position:absolute;left:6px;top:24px;font-size:18px}
  .suit.bottom{left:auto;right:6px;bottom:24px;top:auto;transform:rotate(180deg)}
  .pip{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);font-size:40px}
  .black{color:#111} .red{color:#c62828}
  /* Controls */
  .controls{display:flex;justify-content:center;gap:8px;flex-wrap:wrap}
  .choices{display:grid;grid-template-columns:repeat(5,1fr);gap:6px}
  button{padding:8px 10px;border-radius:10px;border:1px solid #3a3a3a;background:#222;color:#eee;font-size:14px}
  .choices button{padding:10px 0}
  button:active{transform:translateY(1px)}
  .result{text-align:center;min-height:22px;margin-top:2px}
  .score{text-align:center;font-size:13px;opacity:.9}
  .sticky-next{position:sticky;bottom:0;display:flex;justify-content:center;background:linear-gradient(180deg, rgba(27,27,27,0), rgba(27,27,27,1));padding-top:6px;margin-top:0}
  #nextBtn{width:100%;max-width:240px}
  .hidden{display:none}
  table{width:100%;border-collapse:collapse}
  th,td{border:1px solid #333;padding:6px 4px;text-align:center;font-size:13px}
  th{background:#232323}
  .success{color:#7bd88f}
  .meta{font-size:12px;opacity:.9;text-align:center}
  .tag{display:inline-block;padding:2px 6px;border-radius:8px;background:#2a2a2a;margin-left:6px;font-size:12px}
  @media (orientation: landscape){
    .row{flex-direction:row;}
    .leftCol{flex:0 0 auto; display:flex; align-items:flex-start; justify-content:center;}
    .rightCol{flex:1 1 auto;}
    .table{width:min(40vw,420px); height: calc(min(40vw,420px)*0.6);}
    .cards{justify-content:flex-start}
    .choices{grid-template-columns:repeat(5, minmax(56px,1fr))}
    #nextBtn{max-width:220px}
  }
</style>
</head>
<body>
  <h1>UTGレンジ記憶トレ（6-max・オフライン・境界近傍優先｜重複なし v2・コイン＆座標微調整）</h1>
  <div class="app">
    <div class="row">
      <div class="col leftCol">
        <div class="table-wrap">
          <div class="table" aria-label="Poker Table">
            <div class="coin bb-coin1" aria-hidden="true"></div>
            <div class="coin bb-coin2" aria-hidden="true"></div>
            <div class="coin sb-coin1" aria-hidden="true"></div>

            <div class="seat s1 utg">UTG</div>
            <div class="seat s2">HJ</div>
            <div class="seat s3">CO</div>
            <div class="seat s4">BTN</div>
            <div class="seat s5">SB</div>
            <div class="seat s6">BB</div>
          </div>
        </div>
      </div>
      <div class="col rightCol">
        <div class="panel" id="quizPanel">
          <p id="question" class="q"></p>
          <div class="meta">出題モード: <span id="modeTag" class="tag">境界＋近傍優先</span>（境界≫近傍≫フォールド＞純オープン）</div>
          <div id="hand-cards" class="cards"></div>
          <div class="controls">
            <div class="choices" id="buttons"></div>
          </div>
          <div class="result" id="result"></div>
          <div class="sticky-next">
            <button id="nextBtn" class="hidden">次の問題へ</button>
          </div>
          <div class="score">進行状況: <span id="progress">0</span>/10　｜　スコア: <span id="score">0</span></div>
        </div>

        <div class="panel hidden" id="summaryPanel">
          <div class="q" id="summaryTitle">結果まとめ</div>
          <div class="score">スコア: <span id="finalScore">0</span> / 10</div>
          <div id="mistakeBlock" class="hidden">
            <div class="q" style="margin-top:6px;">間違えた問題の復習</div>
            <table>
              <thead>
                <tr><th>#</th><th>Hand</th><th>実際(%)</th><th>正解ボタン</th><th>あなたの回答</th></tr>
              </thead>
              <tbody id="mistakeTable"></tbody>
            </table>
            <div class="controls">
              <button id="startReviewBtn">復習を開始</button>
            </div>
          </div>
          <div class="controls">
            <button id="restartBtn">もう一度 10問</button>
          </div>
        </div>
      </div>
    </div>
  </div>

<script>
/* The rest (data, logic) is identical to the previous full version; to keep this message concise, it's omitted here. 
   In the actual file, you'd include the entire JS like in the v2 full build.
   For this environment, we'll quickly inject the same JS bundle as before. */

// --- JS bundle start (same as v2 full) ---
const RANKS=["A","K","Q","J","T","9","8","7","6","5","4","3","2"];function toHand(e,n){return e===n?RANKS[e]+RANKS[n]:n>e?RANKS[e]+RANKS[n]+"o":RANKS[n]+RANKS[e]+"s"}function fromHand(e){if(2===e.length){const n=RANKS.indexOf(e[0]);return{i:n,j:n}}{const n=e[0],t=e[1],o=e[2],a=RANKS.indexOf(n),s=RANKS.indexOf(t);return"o"===o?{i:a,j:s}:{i:s,j:a}}}function allHands169(){const e=[];for(let n=0;n<RANKS.length;n++)for(let t=0;t<RANKS.length;t++)e.push(toHand(n,t));return e}const UTG=Object.fromEntries(allHands169().map((e=>[e,0]))),OPEN100=["AA","KK","QQ","JJ","TT","99","88","77","66","AKs","AQs","AJs","ATs","A9s","A8s","A7s","A6s","A5s","A4s","A3s","A2s","KQs","KJs","KTs","K9s","QJs","QTs","JTs","T9s","AKo","AQo","AJo","KQo"],OPEN75=["ATo","K8s","Q9s","KJo","J9s","55"],OPEN50=["98s","87s","76s","65s","44"];for(const e of OPEN100)UTG[e]=100;for(const e of OPEN75)UTG[e]=75;for(const e of OPEN50)UTG[e]=50;const DATA=Object.entries(UTG).map((([e,n])=>({Position:"UTG",Hand:e,Frequency:n}))),boundarySet=new Set([...OPEN75,...OPEN50]),nearBoundarySet=new Set;for(const e of boundarySet){const{ i:n,j:t }=fromHand(e);for(let e=-1;e<=1;e++)for(let o=-1;o<=1;o++){if(0===e&&0===o)continue;const a=n+e,s=t+o;(a<0||s<0||a>=RANKS.length||s>=RANKS.length)||nearBoundarySet.add(toHand(a,s))}}const CHOICES=[0,25,50,75,100],SUIT_SYMBOL={S:"♠",H:"♥",D:"♦",C:"♣"};function suitColorClass(e){return"H"===e||"D"===e?"red":"black"}function handToCards(e){if(2===e.length)return[e[0]+"S",e[1]+"H"];const n=e[0],t=e[1],o=e[2];return"s"===o?[n+"S",t+"S"]:[n+"S",t+"H"]}function rankText(e){return"T"===e?"10":e}function makeCardElement(e){const n=e[0],t=e[1],o=suitColorClass(t),a=document.createElement("div");a.className="card";const s=Object.assign(document.createElement("div"),{className:`rank ${o}`,textContent:rankText(n)}),r=Object.assign(document.createElement("div"),{className:`suit ${o}`,textContent:SUIT_SYMBOL[t]}),i=Object.assign(document.createElement("div"),{className:`rank bottom ${o}`,textContent:rankText(n)}),d=Object.assign(document.createElement("div"),{className:`suit bottom ${o}`,textContent:SUIT_SYMBOL[t]}),l=Object.assign(document.createElement("div"),{className:`pip ${o}`,textContent:SUIT_SYMBOL[t]});return a.append(s,r,l,i,d),a}function shuffle(e){for(let n=e.length-1;n>0;n--){const t=Math.floor(Math.random()*(n+1));[e[n],e[t]]=[e[t],e[n]]}return e}const QUIZ_LEN=10;let quizPool=[],usedHands=new Set;function buildQuizPool(){usedHands.clear();const e=DATA.filter((e=>boundarySet.has(e.Hand))),n=DATA.filter((n=>nearBoundarySet.has(n.Hand)&&!boundarySet.has(n.Hand))),t=DATA.filter((e=>0===e.Frequency&&nearBoundarySet.has(e.Hand))),o=DATA.filter((e=>0===e.Frequency&&!nearBoundarySet.has(e.Hand))),a=DATA.filter((e=>100===e.Frequency));function s(e,n){const t=[];for(let o=0;o<n;o++)t.push(...e);return t}const r=shuffle([...s(e,8),...s(n,5),...s(t,3),...s(o,1),...s(a,1)]),i=[];for(const e of r)if(!usedHands.has(e.Hand)&&(usedHands.add(e.Hand),i.push(e),i.length>=QUIZ_LEN))break;if(i.length<QUIZ_LEN){const e=shuffle(DATA.slice());for(const n of e)if(!usedHands.has(n.Hand)&&(usedHands.add(n.Hand),i.push(n),i.length>=QUIZ_LEN))break}quizPool=i}let questionIndex=0,score=0,current=null,history=[],inReview=!1;function nearestBucket(e){return CHOICES.reduce(((n,t)=>Math.abs(t-e)<Math.abs(n-e)?t:n),CHOICES[0])}function renderButtons(){document.getElementById("buttons").innerHTML=CHOICES.map((e=>`<button data-choice="${e}">${e}%</button>`)).join("")}renderButtons(),document.getElementById("buttons").addEventListener("click",(e=>{const n=e.target.closest("button[data-choice]");if(!n)return;const t=parseInt(n.dataset.choice,10);inReview?handleReviewAnswer(t):handleAnswer(t)})),document.getElementById("nextBtn").addEventListener("click",(()=>{inReview?onNextFromWrong_Review():onNextFromWrong_Quiz()})),document.getElementById("restartBtn").addEventListener("click",restartQuiz),document.getElementById("startReviewBtn").addEventListener("click",startReview);function newQuestion(){0===questionIndex&&buildQuizPool(),questionIndex>=QUIZ_LEN?endQuiz():(current=quizPool[questionIndex],document.getElementById("question").textContent=`UTG: ${current.Hand} はオープン何%？`,(()=>{const e=document.getElementById("hand-cards");e.innerHTML="",handToCards(current.Hand).forEach((n=>e.appendChild(makeCardElement(n))))})(),document.getElementById("result").textContent="",document.getElementById("nextBtn").classList.add("hidden"))}function handleAnswer(e){const n=nearestBucket(current.Frequency),t=e===n;history.push({hand:current.Hand,freq:current.Frequency,choice:e,nearest:n,correct:t});const o=0===current.Frequency?"フォールド":100===current.Frequency?"純オープン":"境界";document.getElementById("result").textContent=(t?"✅ 正解！":"❌ 不正解…")+` 正解:${n}%（実際:${current.Frequency}%）｜カテゴリ:${o}`;t?(score++,questionIndex++,updateProgress(),setTimeout(newQuestion,650)):document.getElementById("nextBtn").classList.remove("hidden")}function onNextFromWrong_Quiz(){questionIndex++,updateProgress(),newQuestion()}function updateProgress(){document.getElementById("progress").textContent=String(questionIndex),document.getElementById("score").textContent=String(score)}function endQuiz(){document.getElementById("quizPanel").classList.add("hidden"),document.getElementById("summaryPanel").classList.remove("hidden"),document.getElementById("summaryTitle").textContent="結果まとめ",document.getElementById("finalScore").textContent=String(score);const e=new Map;for(const n of history)n.correct||e.has(n.hand)||e.set(n.hand,n);const n=Array.from(e.values()),t=document.getElementById("mistakeTable");n.length?(document.getElementById("mistakeBlock").classList.remove("hidden"),t.innerHTML=n.map(((e,n)=>`<tr><td>${n+1}</td><td>${e.hand}</td><td>${e.freq}</td><td>${e.nearest}%</td><td>${e.choice}%</td></tr>`)).join(""),reviewQueue=n.map((e=>({Hand:e.hand,Frequency:e.freq})))):(document.getElementById("mistakeBlock").classList.add("hidden"),t.innerHTML="",reviewQueue=[])}function restartQuiz(){inReview=!1,questionIndex=0,score=0,history=[],document.getElementById("progress").textContent="0",document.getElementById("score").textContent="0",document.getElementById("result").textContent="",document.getElementById("summaryPanel").classList.add("hidden"),document.getElementById("quizPanel").classList.remove("hidden"),newQuestion()}let reviewQueue=[],reviewIndex=0,nextRoundQueue=[];function startReview(){reviewQueue.length&&(inReview=!0,reviewIndex=0,nextRoundQueue=[],reviewQueue=shuffle(reviewQueue.slice()),document.getElementById("quizPanel").classList.remove("hidden"),document.getElementById("summaryPanel").classList.add("hidden"),document.getElementById("progress").textContent="復習中",document.getElementById("score").textContent="-",nextReviewQuestion())}function nextReviewQuestion(){if(reviewIndex>=reviewQueue.length){return nextRoundQueue.length?(reviewQueue=shuffle(nextRoundQueue.slice()),nextRoundQueue=[],reviewIndex=0,void nextReviewQuestion()):(inReview=!1,document.getElementById("quizPanel").classList.add("hidden"),document.getElementById("summaryPanel").classList.remove("hidden"),document.getElementById("summaryTitle").innerHTML='結果まとめ　<span class="success">復習完了！</span>',void setTimeout((()=>{document.getElementById("summaryTitle").textContent="結果まとめ",restartQuiz()}),900))}current=reviewQueue[reviewIndex],document.getElementById("question").textContent=`[復習] UTG: ${current.Hand} は何%？`,(()=>{const e=document.getElementById("hand-cards");e.innerHTML="",handToCards(current.Hand).forEach((n=>e.appendChild(makeCardElement(n))))})(),document.getElementById("result").textContent="",document.getElementById("nextBtn").classList.add("hidden")}function handleReviewAnswer(e){const n=nearestBucket(current.Frequency),t=e===n;document.getElementById("result").textContent=t?"✅ 正解！":`❌ 正解は ${n}%（実際:${current.Frequency}%）`,t?setTimeout((()=>{reviewIndex++,nextReviewQuestion()}),600):(nextRoundQueue.push(current),document.getElementById("nextBtn").classList.remove("hidden"))}function onNextFromWrong_Review(){reviewIndex++,nextReviewQuestion()}newQuestion();
// --- JS bundle end ---
</script>
</body>
</html>
